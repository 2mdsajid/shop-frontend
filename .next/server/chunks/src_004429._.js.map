{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:ring-offset-slate-950 dark:focus-visible:ring-slate-300\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-slate-900 text-slate-50 hover:bg-slate-900/90 dark:bg-slate-50 dark:text-slate-900 dark:hover:bg-slate-50/90\",\n        destructive:\n          \"bg-red-500 text-slate-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-slate-50 dark:hover:bg-red-900/90\",\n        outline:\n          \"border border-slate-200 bg-white hover:bg-slate-100 hover:text-slate-900 dark:border-slate-800 dark:bg-slate-950 dark:hover:bg-slate-800 dark:hover:text-slate-50\",\n        secondary:\n          \"bg-slate-100 text-slate-900 hover:bg-slate-100/80 dark:bg-slate-800 dark:text-slate-50 dark:hover:bg-slate-800/80\",\n        ghost: \"hover:bg-slate-100 hover:text-slate-900 dark:hover:bg-slate-800 dark:hover:text-slate-50\",\n        link: \"text-slate-900 underline-offset-4 hover:underline dark:text-slate-50\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAMA,MAAM,iBAAiB,wKACrB,uVACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,gNAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,qLAAiB;IAC9B,qBACE,mPAAC;QACC,WAAW,0HAAG,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/auth/SignIn.tsx"],"sourcesContent":["\"use client\";\nimport { useSession, signIn, signOut } from \"next-auth/react\";\nimport { Button } from \"../ui/button\";\n\nexport default function SignIn() {\n  const { data: session, status } = useSession();\n  \n  if (status === \"loading\") return <div>Loading...</div>;\n\n  if (session) {\n    return (\n      <>\n        Signed in as {session.user?.email} <br />\n        <Button variant={\"destructive\"} onClick={() => signOut({\n          callbackUrl:'/'\n        })}>Sign out</Button>\n      </>\n    );\n  }\n  return (\n    <>\n      Not signed in <br />\n      <Button onClick={() => signIn()}>Sign in</Button>\n    </>\n  );\n}"],"names":[],"mappings":";;;;;;;AAAA;;;;AAIe,SAAS;IACtB,MAAM,EAAE,MAAM,OAAO,EAAE,MAAM,EAAE,GAAG;IAElC,IAAI,WAAW,WAAW,qBAAO,mPAAC;kBAAI;;;;;;IAEtC,IAAI,SAAS;QACX,qBACE;;gBAAE;gBACc,QAAQ,IAAI,EAAE;gBAAM;8BAAC,mPAAC;;;;;8BACpC;oBAAQ,SAAS;oBAAe,SAAS,IAAM,0JAAQ;4BACrD,aAAY;wBACd;8BAAI;;;;;;;;IAGV;IACA,qBACE;;YAAE;0BACc,mPAAC;;;;;0BACf;gBAAQ,SAAS,IAAM;0BAAU;;;;;;;;AAGvC"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}